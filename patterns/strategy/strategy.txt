 Паттерн "Стратегия" (Strategy) - это поведенческий паттерн проектирования, который позволяет определить семейство
алгоритмов, инкапсулировать каждый из них и сделать их взаимозаменяемыми. Этот паттерн позволяет клиентскому коду
выбирать необходимый алгоритм из семейства и использовать его, не изменяя его структуру.

 Применимость паттерна "Стратегия":

   - Когда у вас есть несколько вариантов решения задачи, и вы хотите, чтобы клиентский код мог выбирать нужный вариант.
   - Когда у вас есть множество похожих классов, и различия между ними можно вынести в отдельные стратегии.
   - Когда вы хотите, чтобы класс был закрыт для изменений (Open/Closed Principle), но открыт для расширения,
     то есть вы можете добавлять новые стратегии без изменения существующего кода.

 Плюсы паттерна "Стратегия":

   - Упрощает поддержку и изменение разных вариантов алгоритмов.
   - Позволяет выбирать и комбинировать алгоритмы во время выполнения.
   - Снижает связанность между контекстом и конкретными стратегиями.

 Минусы паттерна "Стратегия":

   - Может создать дополнительную сложность из-за необходимости создания множества классов стратегий.
   - Клиент должен знать о различных стратегиях и выбирать их аккуратно.

 Пример использования паттерна "Стратегия" на практике:

 Представьте, что у нас есть онлайн-магазин в котором можно заказывать товары и оплачивать их. Для того чтобы
пользователю было удобней мы создадим несколько способов оплаты: с помощью кредитной карты и с помощью электронного
кошелька. Пользователь сам может выбрать как ему совершить оплату - данная реализация и есть паттерн "Стратегия." Мы
всегда можем добавить и другие методы оплаты, что не повлияет на работоспособность кода.