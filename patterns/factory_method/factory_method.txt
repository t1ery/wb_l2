 Паттерн "Фабричный метод" (Factory Method) - это порождающий паттерн проектирования, который предоставляет интерфейс
для создания объектов, но оставляет подклассам решение о том, какой класс инстанцировать. Таким образом, он делегирует
создание объектов наследникам, что позволяет классам-наследникам выбирать свой собственный тип объектов для создания.

 Применимость паттерна "Фабричный метод":

   - Когда у вас есть суперкласс с несколькими подклассами, и логика выбора конкретного подкласса
     находится в клиентском коде.
   - Когда вы хотите дать возможность подклассам предоставлять свои собственные реализации объектов.

 Плюсы паттерна "Фабричный метод":

   - Уменьшает связанность между клиентским кодом и создаваемыми объектами.
   - Поддерживает принцип "открытости/закрытости" (Open/Closed Principle) - вы можете добавлять новые подклассы
     без изменения существующего клиентского кода.
   - Позволяет использовать полиморфизм при создании объектов.

 Минусы паттерна "Фабричный метод":

   - Может привести к созданию большого количества подклассов, если необходимо создавать много различных продуктов.

 Пример использования паттерна "Фабричный метод" на практике:

 Представьте графический редактор, который имеет разные инструменты для рисования, такие как кисть, карандаш, ластик
и другие. Вы можете использовать паттерн "Фабричный метод", чтобы каждый инструмент имел свою фабрику для создания
соответствующих объектов (фигур, линий и т. д.). Каждая фабрика будет создавать свой собственный тип объекта
в зависимости от выбранного инструмента, и клиентский код не будет знать конкретных классов объектов,
а только интерфейсы. Это обеспечивает гибкость и расширяемость системы для добавления новых инструментов без изменения
существующего кода.