 Паттерн "Цепочка вызовов" (Chain of Responsibility) - это поведенческий паттерн, который позволяет
передавать запросы последовательно по цепочке обработчиков. Каждый обработчик решает, может ли он
обработать запрос, и передает его следующему обработчику в цепи, если не может. Это позволяет создавать
гибкие и расширяемые системы обработки запросов.

 Применимость паттерна "Цепочка вызовов":

   - Когда есть несколько объектов, способных обработать запрос, и вам необходимо,
     чтобы запрос прошел через все эти объекты.
   - Когда вы хотите, чтобы клиенты могли отправлять запросы без знания, какой именно
     объект обработает запрос.
   - Когда есть несколько уровней обработки запроса.

 Плюсы паттерна "Цепочка вызовов":

   - Убирает прямую зависимость между отправителем запроса и его получателем.
   - Позволяет добавлять или изменять обработчики без изменения клиентского кода.
   - Позволяет строить гибкие цепи обработки запросов.

 Минусы паттерна "Цепочка вызовов":

   - Запрос может быть не обработан, если не найден соответствующий обработчик.

 Пример использования паттерна "Цепочка вызовов" на практике:

 Представьте систему обработки логов. У вас есть несколько обработчиков логов, каждый из которых может
решить, как обрабатывать лог-сообщение (записывать в файл, выводить на экран и т. д.).
Паттерн "Цепочка вызовов" позволит создать цепь обработчиков, через которую проходят все лог-сообщения.
Каждый обработчик решает, должен ли он обрабатывать данное сообщение, и передает его следующему обработчику
в цепи, если не может обработать. Это делает систему гибкой и легко расширяемой для добавления новых обработчиков
логов без изменения существующего кода.